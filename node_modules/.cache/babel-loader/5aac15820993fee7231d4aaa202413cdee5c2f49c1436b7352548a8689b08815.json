{"ast":null,"code":"var _jsxFileName = \"/workspace/src/components/MainAIChat.js\",\n  _s = $RefreshSig$();\n// src/components/MainAIChat.js - Enhanced AI Chat Interface\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainAIChat = ({\n  businessData,\n  callAITool,\n  dbOperations,\n  supabase\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [agentMode, setAgentMode] = useState(\"assistant\");\n  const [isListening, setIsListening] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Proactive AI insights based on business data\n  const generateProactiveInsights = () => {\n    const insights = [];\n    const today = new Date();\n\n    // Check for today's jobs\n    const todayJobs = businessData.jobs.filter(job => {\n      const jobDate = new Date(job.scheduled_date);\n      return jobDate.toDateString() === today.toDateString();\n    });\n    if (todayJobs.length > 2) {\n      insights.push({\n        type: \"schedule_optimization\",\n        priority: \"medium\",\n        message: `You have ${todayJobs.length} jobs scheduled for today. Would you like me to optimize your route to save travel time?`,\n        action: \"optimize_schedule\",\n        data: {\n          jobs: todayJobs\n        }\n      });\n    }\n\n    // Check for overdue invoices\n    const overdueInvoices = businessData.invoices.filter(inv => inv.status === 'sent' && new Date(inv.due_date) < today);\n    if (overdueInvoices.length > 0) {\n      const totalOverdue = overdueInvoices.reduce((sum, inv) => sum + (inv.total_amount || 0), 0);\n      insights.push({\n        type: \"invoice_follow_up\",\n        priority: \"high\",\n        message: `You have ${overdueInvoices.length} overdue invoices totaling $${totalOverdue.toLocaleString()}. Should I send follow-up reminders?`,\n        action: \"send_invoice_reminders\",\n        data: {\n          invoices: overdueInvoices\n        }\n      });\n    }\n\n    // Check for clients with multiple jobs (upsell opportunity)\n    const clientJobCounts = {};\n    businessData.jobs.forEach(job => {\n      if (job.client_id) {\n        clientJobCounts[job.client_id] = (clientJobCounts[job.client_id] || 0) + 1;\n      }\n    });\n    const highValueClients = Object.entries(clientJobCounts).filter(([clientId, count]) => count >= 3).map(([clientId, count]) => {\n      const client = businessData.clients.find(c => c.id === clientId);\n      return {\n        client,\n        jobCount: count\n      };\n    });\n    if (highValueClients.length > 0) {\n      const topClient = highValueClients[0];\n      insights.push({\n        type: \"client_opportunity\",\n        priority: \"low\",\n        message: `${topClient.client.name} has had ${topClient.jobCount} successful jobs. They might be interested in a maintenance package or referral program.`,\n        action: \"create_client_proposal\",\n        data: {\n          client: topClient.client,\n          jobCount: topClient.jobCount\n        }\n      });\n    }\n    return insights.slice(0, 3); // Limit to 3 insights\n  };\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: inputValue.trim(),\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    const messageContent = inputValue.trim();\n    setInputValue(\"\");\n    setIsLoading(true);\n    try {\n      // Call AI tool with business context\n      const aiResponse = await callAITool(messageContent, {\n        businessData,\n        currentDate: new Date(),\n        userPreferences: {\n          mode: agentMode\n        }\n      });\n\n      // Save conversation to database for learning\n      await supabase.from('ai_conversations').insert([{\n        user_message: messageContent,\n        ai_response: JSON.stringify(aiResponse),\n        tool_used: aiResponse.intent,\n        context_data: {\n          jobCount: businessData.jobs.length,\n          clientCount: businessData.clients.length,\n          invoiceCount: businessData.invoices.length,\n          mode: agentMode\n        }\n      }]);\n      const aiMessage = {\n        id: Date.now() + 1,\n        type: 'ai',\n        content: aiResponse.summary,\n        intent: aiResponse.intent,\n        data: aiResponse.data,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error processing message:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'ai',\n        content: \"I encountered an error processing your request. Please try again.\",\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n    setIsLoading(false);\n  };\n  const handleQuickAction = async (action, insight) => {\n    setIsLoading(true);\n    try {\n      let result;\n      switch (action) {\n        case 'optimize_schedule':\n          // Implement route optimization logic\n          result = await optimizeJobRoute(insight.data.jobs);\n          break;\n        case 'send_invoice_reminders':\n          // Send reminders for overdue invoices\n          result = await sendInvoiceReminders(insight.data.invoices);\n          break;\n        case 'create_client_proposal':\n          // Generate client proposal\n          result = await createClientProposal(insight.data.client);\n          break;\n        default:\n          result = {\n            success: false,\n            message: 'Action not implemented yet'\n          };\n      }\n      const responseMessage = {\n        id: Date.now(),\n        type: 'ai',\n        content: result.message,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, responseMessage]);\n    } catch (error) {\n      console.error('Error executing action:', error);\n    }\n    setIsLoading(false);\n  };\n\n  // Helper functions for AI actions\n  const optimizeJobRoute = async jobs => {\n    // Simple route optimization - in practice, you'd use a real routing API\n    const sortedJobs = jobs.sort((a, b) => new Date(a.scheduled_date) - new Date(b.scheduled_date));\n    return {\n      success: true,\n      message: `I've optimized your route for ${jobs.length} jobs today. You'll save approximately 30 minutes of travel time.`,\n      data: {\n        optimizedJobs: sortedJobs\n      }\n    };\n  };\n  const sendInvoiceReminders = async invoices => {\n    // In practice, integrate with email service\n    try {\n      for (const invoice of invoices) {\n        await dbOperations.createCommunication({\n          client_id: invoice.client_id,\n          type: 'email',\n          subject: `Payment Reminder - Invoice ${invoice.invoice_number}`,\n          content: `This is a friendly reminder that Invoice ${invoice.invoice_number} for $${invoice.total_amount} is now overdue. Please submit payment at your earliest convenience.`,\n          urgency: 'high'\n        });\n      }\n      return {\n        success: true,\n        message: `Sent payment reminders for ${invoices.length} overdue invoices.`\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: 'Failed to send invoice reminders. Please try again.'\n      };\n    }\n  };\n  const createClientProposal = async client => {\n    return {\n      success: true,\n      message: `I've drafted a maintenance package proposal for ${client.name}. Would you like me to schedule a follow-up call to discuss it?`\n    };\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Component render methods\n  const StatusBar = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-between px-4 py-2 text-white text-sm font-medium bg-black\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-1\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"9:18\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1 h-3 bg-white rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1 h-4 bg-white rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1 h-3 bg-white rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-1 h-2 bg-white/50 rounded-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-2 text-xs\",\n        children: \"5G\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-6 h-3 bg-white/30 rounded-sm ml-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-5 h-2 bg-white rounded-sm m-0.5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ml-1 text-xs font-bold\",\n        children: \"95\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n  const Header = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-between px-4 py-3 bg-zinc-800 border-b border-zinc-700\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center gap-3 flex-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"p-1 md:hidden\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-6 h-6 text-zinc-400\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 6h16M4 12h16M4 18h16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 104\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-lg font-semibold text-white\",\n        children: \"AI Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-full bg-zinc-900\",\n    children: [/*#__PURE__*/_jsxDEV(StatusBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-4\",\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `mb-2 ${msg.type === 'user' ? 'text-right' : 'text-left'}`,\n        children: msg.content\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t border-zinc-700 bg-zinc-800 flex items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"flex-1 bg-zinc-900 text-white rounded p-2 mr-2 resize-none\",\n        rows: 1,\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onKeyDown: handleKeyPress,\n        placeholder: \"Type your message...\",\n        disabled: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-blue-600 text-white px-4 py-2 rounded disabled:opacity-50\",\n        onClick: handleSendMessage,\n        disabled: isLoading || !inputValue.trim(),\n        children: isLoading ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 5\n  }, this);\n};\n_s(MainAIChat, \"ubjakuRpcw8XKmpFPVjM/Gxebs0=\");\n_c = MainAIChat;\nexport default MainAIChat;\nvar _c;\n$RefreshReg$(_c, \"MainAIChat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","MainAIChat","businessData","callAITool","dbOperations","supabase","_s","messages","setMessages","inputValue","setInputValue","isLoading","setIsLoading","agentMode","setAgentMode","isListening","setIsListening","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","generateProactiveInsights","insights","today","Date","todayJobs","jobs","filter","job","jobDate","scheduled_date","toDateString","length","push","type","priority","message","action","data","overdueInvoices","invoices","inv","status","due_date","totalOverdue","reduce","sum","total_amount","toLocaleString","clientJobCounts","forEach","client_id","highValueClients","Object","entries","clientId","count","map","client","clients","find","c","id","jobCount","topClient","name","slice","handleSendMessage","trim","userMessage","now","content","timestamp","prev","messageContent","aiResponse","currentDate","userPreferences","mode","from","insert","user_message","ai_response","JSON","stringify","tool_used","intent","context_data","clientCount","invoiceCount","aiMessage","summary","error","console","errorMessage","handleQuickAction","insight","result","optimizeJobRoute","sendInvoiceReminders","createClientProposal","success","responseMessage","sortedJobs","sort","a","b","optimizedJobs","invoice","createCommunication","subject","invoice_number","urgency","handleKeyPress","e","key","shiftKey","preventDefault","StatusBar","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Header","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","msg","ref","rows","value","onChange","target","onKeyDown","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["/workspace/src/components/MainAIChat.js"],"sourcesContent":["// src/components/MainAIChat.js - Enhanced AI Chat Interface\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst MainAIChat = ({ businessData, callAITool, dbOperations, supabase }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [agentMode, setAgentMode] = useState(\"assistant\");\n  const [isListening, setIsListening] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Proactive AI insights based on business data\n  const generateProactiveInsights = () => {\n    const insights = [];\n    const today = new Date();\n    \n    // Check for today's jobs\n    const todayJobs = businessData.jobs.filter(job => {\n      const jobDate = new Date(job.scheduled_date);\n      return jobDate.toDateString() === today.toDateString();\n    });\n    \n    if (todayJobs.length > 2) {\n      insights.push({\n        type: \"schedule_optimization\",\n        priority: \"medium\",\n        message: `You have ${todayJobs.length} jobs scheduled for today. Would you like me to optimize your route to save travel time?`,\n        action: \"optimize_schedule\",\n        data: { jobs: todayJobs }\n      });\n    }\n\n    // Check for overdue invoices\n    const overdueInvoices = businessData.invoices.filter(inv => \n      inv.status === 'sent' && new Date(inv.due_date) < today\n    );\n    \n    if (overdueInvoices.length > 0) {\n      const totalOverdue = overdueInvoices.reduce((sum, inv) => sum + (inv.total_amount || 0), 0);\n      insights.push({\n        type: \"invoice_follow_up\",\n        priority: \"high\",\n        message: `You have ${overdueInvoices.length} overdue invoices totaling $${totalOverdue.toLocaleString()}. Should I send follow-up reminders?`,\n        action: \"send_invoice_reminders\",\n        data: { invoices: overdueInvoices }\n      });\n    }\n\n    // Check for clients with multiple jobs (upsell opportunity)\n    const clientJobCounts = {};\n    businessData.jobs.forEach(job => {\n      if (job.client_id) {\n        clientJobCounts[job.client_id] = (clientJobCounts[job.client_id] || 0) + 1;\n      }\n    });\n    \n    const highValueClients = Object.entries(clientJobCounts)\n      .filter(([clientId, count]) => count >= 3)\n      .map(([clientId, count]) => {\n        const client = businessData.clients.find(c => c.id === clientId);\n        return { client, jobCount: count };\n      });\n\n    if (highValueClients.length > 0) {\n      const topClient = highValueClients[0];\n      insights.push({\n        type: \"client_opportunity\",\n        priority: \"low\",\n        message: `${topClient.client.name} has had ${topClient.jobCount} successful jobs. They might be interested in a maintenance package or referral program.`,\n        action: \"create_client_proposal\",\n        data: { client: topClient.client, jobCount: topClient.jobCount }\n      });\n    }\n\n    return insights.slice(0, 3); // Limit to 3 insights\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading) return;\n    \n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: inputValue.trim(),\n      timestamp: new Date()\n    };\n    \n    setMessages(prev => [...prev, userMessage]);\n    const messageContent = inputValue.trim();\n    setInputValue(\"\");\n    setIsLoading(true);\n\n    try {\n      // Call AI tool with business context\n      const aiResponse = await callAITool(messageContent, {\n        businessData,\n        currentDate: new Date(),\n        userPreferences: { mode: agentMode }\n      });\n\n      // Save conversation to database for learning\n      await supabase.from('ai_conversations').insert([{\n        user_message: messageContent,\n        ai_response: JSON.stringify(aiResponse),\n        tool_used: aiResponse.intent,\n        context_data: {\n          jobCount: businessData.jobs.length,\n          clientCount: businessData.clients.length,\n          invoiceCount: businessData.invoices.length,\n          mode: agentMode\n        }\n      }]);\n\n      const aiMessage = {\n        id: Date.now() + 1,\n        type: 'ai',\n        content: aiResponse.summary,\n        intent: aiResponse.intent,\n        data: aiResponse.data,\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error processing message:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'ai',\n        content: \"I encountered an error processing your request. Please try again.\",\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n    \n    setIsLoading(false);\n  };\n\n  const handleQuickAction = async (action, insight) => {\n    setIsLoading(true);\n    \n    try {\n      let result;\n      switch (action) {\n        case 'optimize_schedule':\n          // Implement route optimization logic\n          result = await optimizeJobRoute(insight.data.jobs);\n          break;\n        case 'send_invoice_reminders':\n          // Send reminders for overdue invoices\n          result = await sendInvoiceReminders(insight.data.invoices);\n          break;\n        case 'create_client_proposal':\n          // Generate client proposal\n          result = await createClientProposal(insight.data.client);\n          break;\n        default:\n          result = { success: false, message: 'Action not implemented yet' };\n      }\n      \n      const responseMessage = {\n        id: Date.now(),\n        type: 'ai',\n        content: result.message,\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, responseMessage]);\n    } catch (error) {\n      console.error('Error executing action:', error);\n    }\n    \n    setIsLoading(false);\n  };\n\n  // Helper functions for AI actions\n  const optimizeJobRoute = async (jobs) => {\n    // Simple route optimization - in practice, you'd use a real routing API\n    const sortedJobs = jobs.sort((a, b) => new Date(a.scheduled_date) - new Date(b.scheduled_date));\n    return {\n      success: true,\n      message: `I've optimized your route for ${jobs.length} jobs today. You'll save approximately 30 minutes of travel time.`,\n      data: { optimizedJobs: sortedJobs }\n    };\n  };\n\n  const sendInvoiceReminders = async (invoices) => {\n    // In practice, integrate with email service\n    try {\n      for (const invoice of invoices) {\n        await dbOperations.createCommunication({\n          client_id: invoice.client_id,\n          type: 'email',\n          subject: `Payment Reminder - Invoice ${invoice.invoice_number}`,\n          content: `This is a friendly reminder that Invoice ${invoice.invoice_number} for $${invoice.total_amount} is now overdue. Please submit payment at your earliest convenience.`,\n          urgency: 'high'\n        });\n      }\n      \n      return {\n        success: true,\n        message: `Sent payment reminders for ${invoices.length} overdue invoices.`\n      };\n    } catch (error) {\n      return {\n        success: false,\n        message: 'Failed to send invoice reminders. Please try again.'\n      };\n    }\n  };\n\n  const createClientProposal = async (client) => {\n    return {\n      success: true,\n      message: `I've drafted a maintenance package proposal for ${client.name}. Would you like me to schedule a follow-up call to discuss it?`\n    };\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Component render methods\n  const StatusBar = () => (\n    <div className=\"flex items-center justify-between px-4 py-2 text-white text-sm font-medium bg-black\">\n      <div className=\"flex items-center gap-1\">\n        <span>9:18</span>\n      </div>\n      <div className=\"flex items-center gap-1\">\n        <div className=\"flex gap-1\">\n          <div className=\"w-1 h-3 bg-white rounded-full\"></div>\n          <div className=\"w-1 h-4 bg-white rounded-full\"></div>\n          <div className=\"w-1 h-3 bg-white rounded-full\"></div>\n          <div className=\"w-1 h-2 bg-white/50 rounded-full\"></div>\n        </div>\n        <span className=\"ml-2 text-xs\">5G</span>\n        <div className=\"w-6 h-3 bg-white/30 rounded-sm ml-2\">\n          <div className=\"w-5 h-2 bg-white rounded-sm m-0.5\"></div>\n        </div>\n        <span className=\"ml-1 text-xs font-bold\">95</span>\n      </div>\n    </div>\n  );\n\n  const Header = () => (\n    <div className=\"flex items-center justify-between px-4 py-3 bg-zinc-800 border-b border-zinc-700\">\n      <div className=\"flex items-center gap-3 flex-1\">\n        <button className=\"p-1 md:hidden\">\n          <svg className=\"w-6 h-6 text-zinc-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" /></svg>\n        </button>\n        <span className=\"text-lg font-semibold text-white\">AI Assistant</span>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"flex flex-col h-full bg-zinc-900\">\n      <StatusBar />\n      <Header />\n      {/* Add your chat UI here, e.g. message list, input, etc. */}\n      <div className=\"flex-1 overflow-y-auto p-4\">\n        {messages.map((msg) => (\n          <div key={msg.id} className={`mb-2 ${msg.type === 'user' ? 'text-right' : 'text-left'}`}>{msg.content}</div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"p-4 border-t border-zinc-700 bg-zinc-800 flex items-center\">\n        <textarea\n          className=\"flex-1 bg-zinc-900 text-white rounded p-2 mr-2 resize-none\"\n          rows={1}\n          value={inputValue}\n          onChange={e => setInputValue(e.target.value)}\n          onKeyDown={handleKeyPress}\n          placeholder=\"Type your message...\"\n          disabled={isLoading}\n        />\n        <button\n          className=\"bg-blue-600 text-white px-4 py-2 rounded disabled:opacity-50\"\n          onClick={handleSendMessage}\n          disabled={isLoading || !inputValue.trim()}\n        >\n          {isLoading ? 'Sending...' : 'Send'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default MainAIChat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}