{"ast":null,"code":"var _jsxFileName = \"/workspace/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js - Main TradeFlowAI Application\nimport React, { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport MainAIChat from './components/MainAIChat';\nimport Dashboard from './components/Dashboard';\nimport JobManager from './components/JobManager';\nimport ClientManager from './components/ClientManager';\nimport InvoiceManager from './components/InvoiceManager';\nimport AuthComponent from './components/AuthComponent';\nimport Navigation from './components/Navigation';\nimport './App.css';\n\n// Initialize Supabase client with error handling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// Debug: Log environment variable status (remove this after debugging)\nconsole.log('Environment check:', {\n  hasUrl: !!supabaseUrl,\n  hasKey: !!supabaseKey,\n  urlLength: (supabaseUrl === null || supabaseUrl === void 0 ? void 0 : supabaseUrl.length) || 0,\n  keyLength: (supabaseKey === null || supabaseKey === void 0 ? void 0 : supabaseKey.length) || 0\n});\nlet supabase = null;\nif (supabaseUrl && supabaseKey) {\n  supabase = createClient(supabaseUrl, supabaseKey);\n} else {\n  console.warn('Supabase credentials not found. App will run in demo mode.');\n}\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [currentView, setCurrentView] = useState('chat');\n  const [businessData, setBusinessData] = useState({\n    jobs: [],\n    clients: [],\n    invoices: [],\n    communications: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [supabaseError, setSupabaseError] = useState(!supabaseUrl || !supabaseKey);\n\n  // Check authentication status\n  useEffect(() => {\n    if (!supabase) {\n      setLoading(false);\n      return;\n    }\n    const getSession = async () => {\n      try {\n        const {\n          data: {\n            session\n          }\n        } = await supabase.auth.getSession();\n        setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n        setLoading(false);\n      } catch (error) {\n        console.error('Supabase auth error:', error);\n        setLoading(false);\n      }\n    };\n    getSession();\n\n    // Listen for auth changes\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((event, session) => {\n      setUser((session === null || session === void 0 ? void 0 : session.user) || null);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n\n  // Load business data when user is authenticated\n  useEffect(() => {\n    if (user && supabase) {\n      loadBusinessData();\n    }\n  }, [user]);\n  const loadBusinessData = async () => {\n    if (!supabase) return;\n    try {\n      const [jobsRes, clientsRes, invoicesRes, commsRes] = await Promise.all([supabase.from('jobs').select(`\n          *, \n          clients(name, email, phone)\n        `).order('created_at', {\n        ascending: false\n      }), supabase.from('clients').select('*').order('created_at', {\n        ascending: false\n      }), supabase.from('invoices').select(`\n          *, \n          jobs(title),\n          clients(name)\n        `).order('created_at', {\n        ascending: false\n      }), supabase.from('communications').select(`\n          *, \n          clients(name),\n          jobs(title)\n        `).order('created_at', {\n        ascending: false\n      })]);\n      setBusinessData({\n        jobs: jobsRes.data || [],\n        clients: clientsRes.data || [],\n        invoices: invoicesRes.data || [],\n        communications: commsRes.data || []\n      });\n    } catch (error) {\n      console.error('Error loading business data:', error);\n    }\n  };\n\n  // AI Tool calling function for LLM integration\n  const callAITool = async (prompt, context = {}) => {\n    try {\n      // This would integrate with your preferred AI service (OpenAI, Claude, etc.)\n      // For now, we'll simulate responses based on the prompt\n\n      if (prompt.toLowerCase().includes('schedule') || prompt.toLowerCase().includes('jobs today')) {\n        const todayJobs = businessData.jobs.filter(job => {\n          const jobDate = new Date(job.scheduled_date);\n          const today = new Date();\n          return jobDate.toDateString() === today.toDateString();\n        });\n        return {\n          intent: 'display_jobs',\n          summary: `Found ${todayJobs.length} jobs scheduled for today`,\n          data: {\n            jobs: todayJobs,\n            filter: {\n              timeFilter: 'today'\n            }\n          }\n        };\n      }\n      if (prompt.toLowerCase().includes('clients')) {\n        return {\n          intent: 'display_clients',\n          summary: `Here are your ${businessData.clients.length} clients`,\n          data: {\n            clients: businessData.clients\n          }\n        };\n      }\n      if (prompt.toLowerCase().includes('invoice')) {\n        const overdueInvoices = businessData.invoices.filter(inv => inv.status === 'overdue' || inv.status === 'sent' && new Date(inv.due_date) < new Date());\n        return {\n          intent: 'display_invoices',\n          summary: overdueInvoices.length > 0 ? `Found ${overdueInvoices.length} overdue invoices` : 'All invoices are up to date',\n          data: {\n            invoices: overdueInvoices.length > 0 ? overdueInvoices : businessData.invoices\n          }\n        };\n      }\n\n      // Default response\n      return {\n        intent: 'general',\n        summary: \"I can help you manage your trade business. Ask me about your schedule, clients, invoices, or any specific tasks you need help with.\"\n      };\n    } catch (error) {\n      console.error('AI Tool Error:', error);\n      return {\n        intent: 'error',\n        summary: 'I encountered an error processing your request. Please try again.'\n      };\n    }\n  };\n\n  // Database operations\n  const dbOperations = {\n    // Jobs\n    createJob: async jobData => {\n      const {\n        data,\n        error\n      } = await supabase.from('jobs').insert([jobData]).select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    },\n    updateJob: async (jobId, updates) => {\n      const {\n        data,\n        error\n      } = await supabase.from('jobs').update(updates).eq('id', jobId).select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    },\n    deleteJob: async jobId => {\n      const {\n        error\n      } = await supabase.from('jobs').delete().eq('id', jobId);\n      if (error) throw error;\n      await loadBusinessData();\n    },\n    // Clients\n    createClient: async clientData => {\n      const {\n        data,\n        error\n      } = await supabase.from('clients').insert([clientData]).select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    },\n    updateClient: async (clientId, updates) => {\n      const {\n        data,\n        error\n      } = await supabase.from('clients').update(updates).eq('id', clientId).select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    },\n    // Invoices\n    createInvoice: async invoiceData => {\n      // Generate invoice number\n      const invoiceCount = businessData.invoices.length + 1;\n      const invoiceNumber = `INV-${new Date().getFullYear()}-${invoiceCount.toString().padStart(4, '0')}`;\n      const {\n        data,\n        error\n      } = await supabase.from('invoices').insert([{\n        ...invoiceData,\n        invoice_number: invoiceNumber\n      }]).select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    },\n    updateInvoice: async (invoiceId, updates) => {\n      const {\n        data,\n        error\n      } = await supabase.from('invoices').update(updates).eq('id', invoiceId).select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    },\n    // Communications\n    createCommunication: async commData => {\n      const {\n        data,\n        error\n      } = await supabase.from('communications').insert([commData]).select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-zinc-900\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white\",\n        children: \"Loading TradeFlowAI...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show error if Supabase is not configured\n  if (supabaseError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-zinc-900\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white text-center max-w-md mx-auto p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold mb-4\",\n          children: \"Configuration Required\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4\",\n          children: \"Supabase environment variables are not configured. Please add the following to your Vercel environment variables:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800 p-4 rounded mb-4 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"REACT_APP_SUPABASE_URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"REACT_APP_SUPABASE_ANON_KEY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-400\",\n          children: \"Get these from your Supabase project settings.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this);\n  }\n\n  // TEMPORARILY BYPASSING AUTHENTICATION FOR DEMO\n  // Set a mock user for demo purposes when no real user is authenticated\n  const demoUser = user || {\n    id: 'demo-user-123',\n    email: 'demo@tradeflowai.com',\n    user_metadata: {\n      full_name: 'Demo User'\n    }\n  };\n\n  // if (!user) {\n  //   return <AuthComponent supabase={supabase} />;\n  // }\n\n  const renderCurrentView = () => {\n    switch (currentView) {\n      case 'chat':\n        return /*#__PURE__*/_jsxDEV(MainAIChat, {\n          businessData: businessData,\n          callAITool: callAITool,\n          dbOperations: dbOperations,\n          supabase: supabase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this);\n      case 'dashboard':\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          businessData: businessData,\n          dbOperations: dbOperations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this);\n      case 'jobs':\n        return /*#__PURE__*/_jsxDEV(JobManager, {\n          businessData: businessData,\n          dbOperations: dbOperations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this);\n      case 'clients':\n        return /*#__PURE__*/_jsxDEV(ClientManager, {\n          businessData: businessData,\n          dbOperations: dbOperations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this);\n      case 'invoices':\n        return /*#__PURE__*/_jsxDEV(InvoiceManager, {\n          businessData: businessData,\n          dbOperations: dbOperations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(MainAIChat, {\n          businessData: businessData,\n          callAITool: callAITool,\n          dbOperations: dbOperations,\n          supabase: supabase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-zinc-900\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:flex\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        currentView: currentView,\n        setCurrentView: setCurrentView,\n        user: demoUser,\n        supabase: supabase,\n        businessData: businessData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex-1 md:ml-64\",\n        children: renderCurrentView()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a0mFYoGp3G3kMZ85kte+EMosPtY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createClient","MainAIChat","Dashboard","JobManager","ClientManager","InvoiceManager","AuthComponent","Navigation","jsxDEV","_jsxDEV","supabaseUrl","process","env","REACT_APP_SUPABASE_URL","supabaseKey","REACT_APP_SUPABASE_ANON_KEY","console","log","hasUrl","hasKey","urlLength","length","keyLength","supabase","warn","App","_s","user","setUser","currentView","setCurrentView","businessData","setBusinessData","jobs","clients","invoices","communications","loading","setLoading","supabaseError","setSupabaseError","getSession","data","session","auth","error","subscription","onAuthStateChange","event","unsubscribe","loadBusinessData","jobsRes","clientsRes","invoicesRes","commsRes","Promise","all","from","select","order","ascending","callAITool","prompt","context","toLowerCase","includes","todayJobs","filter","job","jobDate","Date","scheduled_date","today","toDateString","intent","summary","timeFilter","overdueInvoices","inv","status","due_date","dbOperations","createJob","jobData","insert","updateJob","jobId","updates","update","eq","deleteJob","delete","clientData","updateClient","clientId","createInvoice","invoiceData","invoiceCount","invoiceNumber","getFullYear","toString","padStart","invoice_number","updateInvoice","invoiceId","createCommunication","commData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","demoUser","id","email","user_metadata","full_name","renderCurrentView","_c","$RefreshReg$"],"sources":["/workspace/src/App.js"],"sourcesContent":["// src/App.js - Main TradeFlowAI Application\nimport React, { useState, useEffect } from 'react';\nimport { createClient } from '@supabase/supabase-js';\nimport MainAIChat from './components/MainAIChat';\nimport Dashboard from './components/Dashboard';\nimport JobManager from './components/JobManager';\nimport ClientManager from './components/ClientManager';\nimport InvoiceManager from './components/InvoiceManager';\nimport AuthComponent from './components/AuthComponent';\nimport Navigation from './components/Navigation';\nimport './App.css';\n\n// Initialize Supabase client with error handling\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL;\nconst supabaseKey = process.env.REACT_APP_SUPABASE_ANON_KEY;\n\n// Debug: Log environment variable status (remove this after debugging)\nconsole.log('Environment check:', {\n  hasUrl: !!supabaseUrl,\n  hasKey: !!supabaseKey,\n  urlLength: supabaseUrl?.length || 0,\n  keyLength: supabaseKey?.length || 0\n});\n\nlet supabase = null;\nif (supabaseUrl && supabaseKey) {\n  supabase = createClient(supabaseUrl, supabaseKey);\n} else {\n  console.warn('Supabase credentials not found. App will run in demo mode.');\n}\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [currentView, setCurrentView] = useState('chat');\n  const [businessData, setBusinessData] = useState({\n    jobs: [],\n    clients: [],\n    invoices: [],\n    communications: []\n  });\n  const [loading, setLoading] = useState(true);\n  const [supabaseError, setSupabaseError] = useState(!supabaseUrl || !supabaseKey);\n\n  // Check authentication status\n  useEffect(() => {\n    if (!supabase) {\n      setLoading(false);\n      return;\n    }\n\n    const getSession = async () => {\n      try {\n        const { data: { session } } = await supabase.auth.getSession();\n        setUser(session?.user || null);\n        setLoading(false);\n      } catch (error) {\n        console.error('Supabase auth error:', error);\n        setLoading(false);\n      }\n    };\n\n    getSession();\n\n    // Listen for auth changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange(\n      (event, session) => {\n        setUser(session?.user || null);\n      }\n    );\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  // Load business data when user is authenticated\n  useEffect(() => {\n    if (user && supabase) {\n      loadBusinessData();\n    }\n  }, [user]);\n\n  const loadBusinessData = async () => {\n    if (!supabase) return;\n    \n    try {\n      const [jobsRes, clientsRes, invoicesRes, commsRes] = await Promise.all([\n        supabase.from('jobs').select(`\n          *, \n          clients(name, email, phone)\n        `).order('created_at', { ascending: false }),\n        supabase.from('clients').select('*').order('created_at', { ascending: false }),\n        supabase.from('invoices').select(`\n          *, \n          jobs(title),\n          clients(name)\n        `).order('created_at', { ascending: false }),\n        supabase.from('communications').select(`\n          *, \n          clients(name),\n          jobs(title)\n        `).order('created_at', { ascending: false })\n      ]);\n\n      setBusinessData({\n        jobs: jobsRes.data || [],\n        clients: clientsRes.data || [],\n        invoices: invoicesRes.data || [],\n        communications: commsRes.data || []\n      });\n    } catch (error) {\n      console.error('Error loading business data:', error);\n    }\n  };\n\n  // AI Tool calling function for LLM integration\n  const callAITool = async (prompt, context = {}) => {\n    try {\n      // This would integrate with your preferred AI service (OpenAI, Claude, etc.)\n      // For now, we'll simulate responses based on the prompt\n      \n      if (prompt.toLowerCase().includes('schedule') || prompt.toLowerCase().includes('jobs today')) {\n        const todayJobs = businessData.jobs.filter(job => {\n          const jobDate = new Date(job.scheduled_date);\n          const today = new Date();\n          return jobDate.toDateString() === today.toDateString();\n        });\n        \n        return {\n          intent: 'display_jobs',\n          summary: `Found ${todayJobs.length} jobs scheduled for today`,\n          data: { jobs: todayJobs, filter: { timeFilter: 'today' } }\n        };\n      }\n      \n      if (prompt.toLowerCase().includes('clients')) {\n        return {\n          intent: 'display_clients',\n          summary: `Here are your ${businessData.clients.length} clients`,\n          data: { clients: businessData.clients }\n        };\n      }\n      \n      if (prompt.toLowerCase().includes('invoice')) {\n        const overdueInvoices = businessData.invoices.filter(inv => \n          inv.status === 'overdue' || \n          (inv.status === 'sent' && new Date(inv.due_date) < new Date())\n        );\n        \n        return {\n          intent: 'display_invoices',\n          summary: overdueInvoices.length > 0 \n            ? `Found ${overdueInvoices.length} overdue invoices` \n            : 'All invoices are up to date',\n          data: { invoices: overdueInvoices.length > 0 ? overdueInvoices : businessData.invoices }\n        };\n      }\n      \n      // Default response\n      return {\n        intent: 'general',\n        summary: \"I can help you manage your trade business. Ask me about your schedule, clients, invoices, or any specific tasks you need help with.\"\n      };\n      \n    } catch (error) {\n      console.error('AI Tool Error:', error);\n      return {\n        intent: 'error',\n        summary: 'I encountered an error processing your request. Please try again.'\n      };\n    }\n  };\n\n  // Database operations\n  const dbOperations = {\n    // Jobs\n    createJob: async (jobData) => {\n      const { data, error } = await supabase\n        .from('jobs')\n        .insert([jobData])\n        .select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    },\n\n    updateJob: async (jobId, updates) => {\n      const { data, error } = await supabase\n        .from('jobs')\n        .update(updates)\n        .eq('id', jobId)\n        .select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    },\n\n    deleteJob: async (jobId) => {\n      const { error } = await supabase\n        .from('jobs')\n        .delete()\n        .eq('id', jobId);\n      if (error) throw error;\n      await loadBusinessData();\n    },\n\n    // Clients\n    createClient: async (clientData) => {\n      const { data, error } = await supabase\n        .from('clients')\n        .insert([clientData])\n        .select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    },\n\n    updateClient: async (clientId, updates) => {\n      const { data, error } = await supabase\n        .from('clients')\n        .update(updates)\n        .eq('id', clientId)\n        .select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    },\n\n    // Invoices\n    createInvoice: async (invoiceData) => {\n      // Generate invoice number\n      const invoiceCount = businessData.invoices.length + 1;\n      const invoiceNumber = `INV-${new Date().getFullYear()}-${invoiceCount.toString().padStart(4, '0')}`;\n      \n      const { data, error } = await supabase\n        .from('invoices')\n        .insert([{ ...invoiceData, invoice_number: invoiceNumber }])\n        .select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    },\n\n    updateInvoice: async (invoiceId, updates) => {\n      const { data, error } = await supabase\n        .from('invoices')\n        .update(updates)\n        .eq('id', invoiceId)\n        .select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    },\n\n    // Communications\n    createCommunication: async (commData) => {\n      const { data, error } = await supabase\n        .from('communications')\n        .insert([commData])\n        .select();\n      if (error) throw error;\n      await loadBusinessData();\n      return data[0];\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-zinc-900\">\n        <div className=\"text-white\">Loading TradeFlowAI...</div>\n      </div>\n    );\n  }\n\n  // Show error if Supabase is not configured\n  if (supabaseError) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-zinc-900\">\n        <div className=\"text-white text-center max-w-md mx-auto p-6\">\n          <h1 className=\"text-2xl font-bold mb-4\">Configuration Required</h1>\n          <p className=\"mb-4\">\n            Supabase environment variables are not configured. Please add the following to your Vercel environment variables:\n          </p>\n          <div className=\"bg-gray-800 p-4 rounded mb-4 text-sm\">\n            <p><strong>REACT_APP_SUPABASE_URL</strong></p>\n            <p><strong>REACT_APP_SUPABASE_ANON_KEY</strong></p>\n          </div>\n          <p className=\"text-sm text-gray-400\">\n            Get these from your Supabase project settings.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  // TEMPORARILY BYPASSING AUTHENTICATION FOR DEMO\n  // Set a mock user for demo purposes when no real user is authenticated\n  const demoUser = user || {\n    id: 'demo-user-123',\n    email: 'demo@tradeflowai.com',\n    user_metadata: {\n      full_name: 'Demo User'\n    }\n  };\n  \n  // if (!user) {\n  //   return <AuthComponent supabase={supabase} />;\n  // }\n\n  const renderCurrentView = () => {\n    switch (currentView) {\n      case 'chat':\n        return (\n          <MainAIChat \n            businessData={businessData}\n            callAITool={callAITool}\n            dbOperations={dbOperations}\n            supabase={supabase}\n          />\n        );\n      case 'dashboard':\n        return (\n          <Dashboard \n            businessData={businessData}\n            dbOperations={dbOperations}\n          />\n        );\n      case 'jobs':\n        return (\n          <JobManager \n            businessData={businessData}\n            dbOperations={dbOperations}\n          />\n        );\n      case 'clients':\n        return (\n          <ClientManager \n            businessData={businessData}\n            dbOperations={dbOperations}\n          />\n        );\n      case 'invoices':\n        return (\n          <InvoiceManager \n            businessData={businessData}\n            dbOperations={dbOperations}\n          />\n        );\n      default:\n        return (\n          <MainAIChat \n            businessData={businessData}\n            callAITool={callAITool}\n            dbOperations={dbOperations}\n            supabase={supabase}\n          />\n        );\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-zinc-900\">\n      {/* Mobile-first layout */}\n      <div className=\"md:flex\">\n        {/* Navigation */}\n        <Navigation \n          currentView={currentView}\n          setCurrentView={setCurrentView}\n          user={demoUser}\n          supabase={supabase}\n          businessData={businessData}\n        />\n        \n        {/* Main Content */}\n        <main className=\"flex-1 md:ml-64\">\n          {renderCurrentView()}\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}